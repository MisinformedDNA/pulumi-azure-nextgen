"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account.
 */
class Account extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState;
            if (!args || args.accountName === undefined) {
                throw new Error("Missing required property 'accountName'");
            }
            if (!args || args.dataLakeStoreAccounts === undefined) {
                throw new Error("Missing required property 'dataLakeStoreAccounts'");
            }
            if (!args || args.defaultDataLakeStoreAccount === undefined) {
                throw new Error("Missing required property 'defaultDataLakeStoreAccount'");
            }
            if (!args || args.location === undefined) {
                throw new Error("Missing required property 'location'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["accountName"] = args ? args.accountName : undefined;
            inputs["computePolicies"] = args ? args.computePolicies : undefined;
            inputs["dataLakeStoreAccounts"] = args ? args.dataLakeStoreAccounts : undefined;
            inputs["defaultDataLakeStoreAccount"] = args ? args.defaultDataLakeStoreAccount : undefined;
            inputs["firewallAllowAzureIps"] = args ? args.firewallAllowAzureIps : undefined;
            inputs["firewallRules"] = args ? args.firewallRules : undefined;
            inputs["firewallState"] = args ? args.firewallState : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["maxDegreeOfParallelism"] = args ? args.maxDegreeOfParallelism : undefined;
            inputs["maxDegreeOfParallelismPerJob"] = args ? args.maxDegreeOfParallelismPerJob : undefined;
            inputs["maxJobCount"] = args ? args.maxJobCount : undefined;
            inputs["minPriorityPerJob"] = args ? args.minPriorityPerJob : undefined;
            inputs["newTier"] = args ? args.newTier : undefined;
            inputs["queryStoreRetention"] = args ? args.queryStoreRetention : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["storageAccounts"] = args ? args.storageAccounts : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["accountId"] = undefined /*out*/;
            inputs["creationTime"] = undefined /*out*/;
            inputs["currentTier"] = undefined /*out*/;
            inputs["endpoint"] = undefined /*out*/;
            inputs["lastModifiedTime"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["systemMaxDegreeOfParallelism"] = undefined /*out*/;
            inputs["systemMaxJobCount"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Account.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Account(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }
}
exports.Account = Account;
/** @internal */
Account.__pulumiType = 'azurerm:datalakeanalytics/v20161101:Account';
//# sourceMappingURL=account.js.map