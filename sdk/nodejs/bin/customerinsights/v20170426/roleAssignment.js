"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * The Role Assignment resource format.
 */
class RoleAssignment extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState;
            if (!args || args.assignmentName === undefined) {
                throw new Error("Missing required property 'assignmentName'");
            }
            if (!args || args.hubName === undefined) {
                throw new Error("Missing required property 'hubName'");
            }
            if (!args || args.principals === undefined) {
                throw new Error("Missing required property 'principals'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.role === undefined) {
                throw new Error("Missing required property 'role'");
            }
            inputs["assignmentName"] = args ? args.assignmentName : undefined;
            inputs["conflationPolicies"] = args ? args.conflationPolicies : undefined;
            inputs["connectors"] = args ? args.connectors : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["hubName"] = args ? args.hubName : undefined;
            inputs["interactions"] = args ? args.interactions : undefined;
            inputs["kpis"] = args ? args.kpis : undefined;
            inputs["links"] = args ? args.links : undefined;
            inputs["principals"] = args ? args.principals : undefined;
            inputs["profiles"] = args ? args.profiles : undefined;
            inputs["relationshipLinks"] = args ? args.relationshipLinks : undefined;
            inputs["relationships"] = args ? args.relationships : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["role"] = args ? args.role : undefined;
            inputs["roleAssignments"] = args ? args.roleAssignments : undefined;
            inputs["sasPolicies"] = args ? args.sasPolicies : undefined;
            inputs["segments"] = args ? args.segments : undefined;
            inputs["views"] = args ? args.views : undefined;
            inputs["widgetTypes"] = args ? args.widgetTypes : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["tenantId"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azurerm:customerinsights/v20170101:RoleAssignment" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(RoleAssignment.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing RoleAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new RoleAssignment(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of RoleAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoleAssignment.__pulumiType;
    }
}
exports.RoleAssignment = RoleAssignment;
/** @internal */
RoleAssignment.__pulumiType = 'azurerm:customerinsights/v20170426:RoleAssignment';
//# sourceMappingURL=roleAssignment.js.map