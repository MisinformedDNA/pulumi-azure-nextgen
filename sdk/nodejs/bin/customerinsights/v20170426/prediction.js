"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * The prediction resource format.
 */
class Prediction extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState;
            if (!args || args.autoAnalyze === undefined) {
                throw new Error("Missing required property 'autoAnalyze'");
            }
            if (!args || args.hubName === undefined) {
                throw new Error("Missing required property 'hubName'");
            }
            if (!args || args.mappings === undefined) {
                throw new Error("Missing required property 'mappings'");
            }
            if (!args || args.negativeOutcomeExpression === undefined) {
                throw new Error("Missing required property 'negativeOutcomeExpression'");
            }
            if (!args || args.positiveOutcomeExpression === undefined) {
                throw new Error("Missing required property 'positiveOutcomeExpression'");
            }
            if (!args || args.predictionName === undefined) {
                throw new Error("Missing required property 'predictionName'");
            }
            if (!args || args.primaryProfileType === undefined) {
                throw new Error("Missing required property 'primaryProfileType'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.scopeExpression === undefined) {
                throw new Error("Missing required property 'scopeExpression'");
            }
            if (!args || args.scoreLabel === undefined) {
                throw new Error("Missing required property 'scoreLabel'");
            }
            inputs["autoAnalyze"] = args ? args.autoAnalyze : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["grades"] = args ? args.grades : undefined;
            inputs["hubName"] = args ? args.hubName : undefined;
            inputs["involvedInteractionTypes"] = args ? args.involvedInteractionTypes : undefined;
            inputs["involvedKpiTypes"] = args ? args.involvedKpiTypes : undefined;
            inputs["involvedRelationships"] = args ? args.involvedRelationships : undefined;
            inputs["mappings"] = args ? args.mappings : undefined;
            inputs["negativeOutcomeExpression"] = args ? args.negativeOutcomeExpression : undefined;
            inputs["positiveOutcomeExpression"] = args ? args.positiveOutcomeExpression : undefined;
            inputs["predictionName"] = args ? args.predictionName : undefined;
            inputs["primaryProfileType"] = args ? args.primaryProfileType : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["scopeExpression"] = args ? args.scopeExpression : undefined;
            inputs["scoreLabel"] = args ? args.scoreLabel : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["systemGeneratedEntities"] = undefined /*out*/;
            inputs["tenantId"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Prediction.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Prediction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Prediction(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Prediction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Prediction.__pulumiType;
    }
}
exports.Prediction = Prediction;
/** @internal */
Prediction.__pulumiType = 'azurerm:customerinsights/v20170426:Prediction';
//# sourceMappingURL=prediction.js.map