"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Authorization in an ExpressRouteCircuit resource.
 */
class ExpressRouteCircuitAuthorization extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState;
            if (!args || args.authorizationName === undefined) {
                throw new Error("Missing required property 'authorizationName'");
            }
            if (!args || args.circuitName === undefined) {
                throw new Error("Missing required property 'circuitName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["authorizationKey"] = args ? args.authorizationKey : undefined;
            inputs["authorizationName"] = args ? args.authorizationName : undefined;
            inputs["authorizationUseStatus"] = args ? args.authorizationUseStatus : undefined;
            inputs["circuitName"] = args ? args.circuitName : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["provisioningState"] = args ? args.provisioningState : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["etag"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azurerm:network/v20150615:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20160330:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20160601:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20160901:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20161201:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20170301:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20170601:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20170801:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20170901:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20171101:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20180101:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20180201:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20180401:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20180601:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20180701:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20180801:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20181001:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20181101:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20181201:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20190201:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20190401:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20190601:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20190701:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20190801:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20190901:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20191101:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20191201:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20200301:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20200401:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20200501:ExpressRouteCircuitAuthorization" }, { type: "azurerm:network/v20200601:ExpressRouteCircuitAuthorization" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(ExpressRouteCircuitAuthorization.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ExpressRouteCircuitAuthorization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new ExpressRouteCircuitAuthorization(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ExpressRouteCircuitAuthorization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExpressRouteCircuitAuthorization.__pulumiType;
    }
}
exports.ExpressRouteCircuitAuthorization = ExpressRouteCircuitAuthorization;
/** @internal */
ExpressRouteCircuitAuthorization.__pulumiType = 'azurerm:network/v20171001:ExpressRouteCircuitAuthorization';
//# sourceMappingURL=expressRouteCircuitAuthorization.js.map