"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Route Filter Resource.
 */
class RouteFilter extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState;
            if (!args || args.location === undefined) {
                throw new Error("Missing required property 'location'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.routeFilterName === undefined) {
                throw new Error("Missing required property 'routeFilterName'");
            }
            inputs["id"] = args ? args.id : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["routeFilterName"] = args ? args.routeFilterName : undefined;
            inputs["rules"] = args ? args.rules : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["etag"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["peerings"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azurerm:network/v20161201:RouteFilter" }, { type: "azurerm:network/v20170601:RouteFilter" }, { type: "azurerm:network/v20170801:RouteFilter" }, { type: "azurerm:network/v20170901:RouteFilter" }, { type: "azurerm:network/v20171001:RouteFilter" }, { type: "azurerm:network/v20171101:RouteFilter" }, { type: "azurerm:network/v20180101:RouteFilter" }, { type: "azurerm:network/v20180201:RouteFilter" }, { type: "azurerm:network/v20180401:RouteFilter" }, { type: "azurerm:network/v20180601:RouteFilter" }, { type: "azurerm:network/v20180701:RouteFilter" }, { type: "azurerm:network/v20180801:RouteFilter" }, { type: "azurerm:network/v20181001:RouteFilter" }, { type: "azurerm:network/v20181101:RouteFilter" }, { type: "azurerm:network/v20181201:RouteFilter" }, { type: "azurerm:network/v20190201:RouteFilter" }, { type: "azurerm:network/v20190401:RouteFilter" }, { type: "azurerm:network/v20190601:RouteFilter" }, { type: "azurerm:network/v20190701:RouteFilter" }, { type: "azurerm:network/v20190801:RouteFilter" }, { type: "azurerm:network/v20190901:RouteFilter" }, { type: "azurerm:network/v20191101:RouteFilter" }, { type: "azurerm:network/v20191201:RouteFilter" }, { type: "azurerm:network/v20200301:RouteFilter" }, { type: "azurerm:network/v20200401:RouteFilter" }, { type: "azurerm:network/v20200501:RouteFilter" }, { type: "azurerm:network/v20200601:RouteFilter" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(RouteFilter.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing RouteFilter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new RouteFilter(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of RouteFilter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouteFilter.__pulumiType;
    }
}
exports.RouteFilter = RouteFilter;
/** @internal */
RouteFilter.__pulumiType = 'azurerm:network/v20170301:RouteFilter';
//# sourceMappingURL=routeFilter.js.map