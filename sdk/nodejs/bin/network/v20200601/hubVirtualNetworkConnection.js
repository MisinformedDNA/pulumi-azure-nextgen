"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * HubVirtualNetworkConnection Resource.
 */
class HubVirtualNetworkConnection extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState;
            if (!args || args.connectionName === undefined) {
                throw new Error("Missing required property 'connectionName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.virtualHubName === undefined) {
                throw new Error("Missing required property 'virtualHubName'");
            }
            inputs["allowHubToRemoteVnetTransit"] = args ? args.allowHubToRemoteVnetTransit : undefined;
            inputs["allowRemoteVnetToUseHubVnetGateways"] = args ? args.allowRemoteVnetToUseHubVnetGateways : undefined;
            inputs["connectionName"] = args ? args.connectionName : undefined;
            inputs["enableInternetSecurity"] = args ? args.enableInternetSecurity : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["remoteVirtualNetwork"] = args ? args.remoteVirtualNetwork : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["routingConfiguration"] = args ? args.routingConfiguration : undefined;
            inputs["virtualHubName"] = args ? args.virtualHubName : undefined;
            inputs["etag"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azurerm:network/v20180401:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20180601:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20180701:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20180801:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20181001:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20181101:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20181201:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20190201:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20190401:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20190601:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20190701:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20190801:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20190901:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20191101:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20191201:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20200301:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20200401:HubVirtualNetworkConnection" }, { type: "azurerm:network/v20200501:HubVirtualNetworkConnection" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(HubVirtualNetworkConnection.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing HubVirtualNetworkConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new HubVirtualNetworkConnection(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of HubVirtualNetworkConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HubVirtualNetworkConnection.__pulumiType;
    }
}
exports.HubVirtualNetworkConnection = HubVirtualNetworkConnection;
/** @internal */
HubVirtualNetworkConnection.__pulumiType = 'azurerm:network/v20200601:HubVirtualNetworkConnection';
//# sourceMappingURL=hubVirtualNetworkConnection.js.map