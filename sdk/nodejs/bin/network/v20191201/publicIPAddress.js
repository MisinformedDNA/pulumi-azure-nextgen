"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Public IP address resource.
 */
class PublicIPAddress extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState;
            if (!args || args.publicIpAddressName === undefined) {
                throw new Error("Missing required property 'publicIpAddressName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["ddosSettings"] = args ? args.ddosSettings : undefined;
            inputs["dnsSettings"] = args ? args.dnsSettings : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["idleTimeoutInMinutes"] = args ? args.idleTimeoutInMinutes : undefined;
            inputs["ipAddress"] = args ? args.ipAddress : undefined;
            inputs["ipTags"] = args ? args.ipTags : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["publicIPAddressVersion"] = args ? args.publicIPAddressVersion : undefined;
            inputs["publicIPAllocationMethod"] = args ? args.publicIPAllocationMethod : undefined;
            inputs["publicIPPrefix"] = args ? args.publicIPPrefix : undefined;
            inputs["publicIpAddressName"] = args ? args.publicIpAddressName : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["zones"] = args ? args.zones : undefined;
            inputs["etag"] = undefined /*out*/;
            inputs["ipConfiguration"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["resourceGuid"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azurerm:network/v20150615:PublicIPAddress" }, { type: "azurerm:network/v20160330:PublicIPAddress" }, { type: "azurerm:network/v20160601:PublicIPAddress" }, { type: "azurerm:network/v20160901:PublicIPAddress" }, { type: "azurerm:network/v20161201:PublicIPAddress" }, { type: "azurerm:network/v20170301:PublicIPAddress" }, { type: "azurerm:network/v20170601:PublicIPAddress" }, { type: "azurerm:network/v20170801:PublicIPAddress" }, { type: "azurerm:network/v20170901:PublicIPAddress" }, { type: "azurerm:network/v20171001:PublicIPAddress" }, { type: "azurerm:network/v20171101:PublicIPAddress" }, { type: "azurerm:network/v20180101:PublicIPAddress" }, { type: "azurerm:network/v20180201:PublicIPAddress" }, { type: "azurerm:network/v20180401:PublicIPAddress" }, { type: "azurerm:network/v20180601:PublicIPAddress" }, { type: "azurerm:network/v20180701:PublicIPAddress" }, { type: "azurerm:network/v20180801:PublicIPAddress" }, { type: "azurerm:network/v20181001:PublicIPAddress" }, { type: "azurerm:network/v20181101:PublicIPAddress" }, { type: "azurerm:network/v20181201:PublicIPAddress" }, { type: "azurerm:network/v20190201:PublicIPAddress" }, { type: "azurerm:network/v20190401:PublicIPAddress" }, { type: "azurerm:network/v20190601:PublicIPAddress" }, { type: "azurerm:network/v20190701:PublicIPAddress" }, { type: "azurerm:network/v20190801:PublicIPAddress" }, { type: "azurerm:network/v20190901:PublicIPAddress" }, { type: "azurerm:network/v20191101:PublicIPAddress" }, { type: "azurerm:network/v20200301:PublicIPAddress" }, { type: "azurerm:network/v20200401:PublicIPAddress" }, { type: "azurerm:network/v20200501:PublicIPAddress" }, { type: "azurerm:network/v20200601:PublicIPAddress" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(PublicIPAddress.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing PublicIPAddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new PublicIPAddress(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of PublicIPAddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PublicIPAddress.__pulumiType;
    }
}
exports.PublicIPAddress = PublicIPAddress;
/** @internal */
PublicIPAddress.__pulumiType = 'azurerm:network/v20191201:PublicIPAddress';
//# sourceMappingURL=publicIPAddress.js.map