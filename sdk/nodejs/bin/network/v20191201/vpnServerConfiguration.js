"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * VpnServerConfiguration Resource.
 */
class VpnServerConfiguration extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState;
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.vpnServerConfigurationName === undefined) {
                throw new Error("Missing required property 'vpnServerConfigurationName'");
            }
            inputs["aadAuthenticationParameters"] = args ? args.aadAuthenticationParameters : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["radiusClientRootCertificates"] = args ? args.radiusClientRootCertificates : undefined;
            inputs["radiusServerAddress"] = args ? args.radiusServerAddress : undefined;
            inputs["radiusServerRootCertificates"] = args ? args.radiusServerRootCertificates : undefined;
            inputs["radiusServerSecret"] = args ? args.radiusServerSecret : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["vpnAuthenticationTypes"] = args ? args.vpnAuthenticationTypes : undefined;
            inputs["vpnClientIpsecPolicies"] = args ? args.vpnClientIpsecPolicies : undefined;
            inputs["vpnClientRevokedCertificates"] = args ? args.vpnClientRevokedCertificates : undefined;
            inputs["vpnClientRootCertificates"] = args ? args.vpnClientRootCertificates : undefined;
            inputs["vpnProtocols"] = args ? args.vpnProtocols : undefined;
            inputs["vpnServerConfigurationName"] = args ? args.vpnServerConfigurationName : undefined;
            inputs["etag"] = undefined /*out*/;
            inputs["p2SVpnGateways"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azurerm:network/v20190801:VpnServerConfiguration" }, { type: "azurerm:network/v20190901:VpnServerConfiguration" }, { type: "azurerm:network/v20191101:VpnServerConfiguration" }, { type: "azurerm:network/v20200301:VpnServerConfiguration" }, { type: "azurerm:network/v20200401:VpnServerConfiguration" }, { type: "azurerm:network/v20200501:VpnServerConfiguration" }, { type: "azurerm:network/v20200601:VpnServerConfiguration" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(VpnServerConfiguration.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing VpnServerConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new VpnServerConfiguration(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VpnServerConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpnServerConfiguration.__pulumiType;
    }
}
exports.VpnServerConfiguration = VpnServerConfiguration;
/** @internal */
VpnServerConfiguration.__pulumiType = 'azurerm:network/v20191201:VpnServerConfiguration';
//# sourceMappingURL=vpnServerConfiguration.js.map