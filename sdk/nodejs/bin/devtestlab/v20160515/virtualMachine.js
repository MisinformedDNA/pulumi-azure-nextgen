"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * A virtual machine.
 */
class VirtualMachine extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState;
            if (!args || args.labName === undefined) {
                throw new Error("Missing required property 'labName'");
            }
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["allowClaim"] = args ? args.allowClaim : undefined;
            inputs["applicableSchedule"] = args ? args.applicableSchedule : undefined;
            inputs["artifactDeploymentStatus"] = args ? args.artifactDeploymentStatus : undefined;
            inputs["artifacts"] = args ? args.artifacts : undefined;
            inputs["computeVm"] = args ? args.computeVm : undefined;
            inputs["createdByUser"] = args ? args.createdByUser : undefined;
            inputs["createdByUserId"] = args ? args.createdByUserId : undefined;
            inputs["createdDate"] = args ? args.createdDate : undefined;
            inputs["customImageId"] = args ? args.customImageId : undefined;
            inputs["disallowPublicIpAddress"] = args ? args.disallowPublicIpAddress : undefined;
            inputs["environmentId"] = args ? args.environmentId : undefined;
            inputs["expirationDate"] = args ? args.expirationDate : undefined;
            inputs["fqdn"] = args ? args.fqdn : undefined;
            inputs["galleryImageReference"] = args ? args.galleryImageReference : undefined;
            inputs["isAuthenticationWithSshKey"] = args ? args.isAuthenticationWithSshKey : undefined;
            inputs["labName"] = args ? args.labName : undefined;
            inputs["labSubnetName"] = args ? args.labSubnetName : undefined;
            inputs["labVirtualNetworkId"] = args ? args.labVirtualNetworkId : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["networkInterface"] = args ? args.networkInterface : undefined;
            inputs["notes"] = args ? args.notes : undefined;
            inputs["osType"] = args ? args.osType : undefined;
            inputs["ownerObjectId"] = args ? args.ownerObjectId : undefined;
            inputs["ownerUserPrincipalName"] = args ? args.ownerUserPrincipalName : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["provisioningState"] = args ? args.provisioningState : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["size"] = args ? args.size : undefined;
            inputs["sshKey"] = args ? args.sshKey : undefined;
            inputs["storageType"] = args ? args.storageType : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["uniqueIdentifier"] = args ? args.uniqueIdentifier : undefined;
            inputs["userName"] = args ? args.userName : undefined;
            inputs["virtualMachineCreationSource"] = args ? args.virtualMachineCreationSource : undefined;
            inputs["computeId"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azurerm:devtestlab/v20180915:VirtualMachine" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(VirtualMachine.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing VirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new VirtualMachine(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VirtualMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualMachine.__pulumiType;
    }
}
exports.VirtualMachine = VirtualMachine;
/** @internal */
VirtualMachine.__pulumiType = 'azurerm:devtestlab/v20160515:VirtualMachine';
//# sourceMappingURL=virtualMachine.js.map