"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Describes a Virtual Machine Scale Set Extension.
 */
class VirtualMachineScaleSetExtension extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState;
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.vmScaleSetName === undefined) {
                throw new Error("Missing required property 'vmScaleSetName'");
            }
            if (!args || args.vmssExtensionName === undefined) {
                throw new Error("Missing required property 'vmssExtensionName'");
            }
            inputs["autoUpgradeMinorVersion"] = args ? args.autoUpgradeMinorVersion : undefined;
            inputs["forceUpdateTag"] = args ? args.forceUpdateTag : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["protectedSettings"] = args ? args.protectedSettings : undefined;
            inputs["publisher"] = args ? args.publisher : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["settings"] = args ? args.settings : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["typeHandlerVersion"] = args ? args.typeHandlerVersion : undefined;
            inputs["vmScaleSetName"] = args ? args.vmScaleSetName : undefined;
            inputs["vmssExtensionName"] = args ? args.vmssExtensionName : undefined;
            inputs["provisioningState"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azurerm:compute/v20170330:VirtualMachineScaleSetExtension" }, { type: "azurerm:compute/v20171201:VirtualMachineScaleSetExtension" }, { type: "azurerm:compute/v20180601:VirtualMachineScaleSetExtension" }, { type: "azurerm:compute/v20181001:VirtualMachineScaleSetExtension" }, { type: "azurerm:compute/v20190301:VirtualMachineScaleSetExtension" }, { type: "azurerm:compute/v20190701:VirtualMachineScaleSetExtension" }, { type: "azurerm:compute/v20191201:VirtualMachineScaleSetExtension" }, { type: "azurerm:compute/v20200601:VirtualMachineScaleSetExtension" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(VirtualMachineScaleSetExtension.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing VirtualMachineScaleSetExtension resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new VirtualMachineScaleSetExtension(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VirtualMachineScaleSetExtension.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualMachineScaleSetExtension.__pulumiType;
    }
}
exports.VirtualMachineScaleSetExtension = VirtualMachineScaleSetExtension;
/** @internal */
VirtualMachineScaleSetExtension.__pulumiType = 'azurerm:compute/v20180401:VirtualMachineScaleSetExtension';
//# sourceMappingURL=virtualMachineScaleSetExtension.js.map