"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Snapshot policy information
 */
class SnapshotPolicy extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState;
            if (!args || args.accountName === undefined) {
                throw new Error("Missing required property 'accountName'");
            }
            if (!args || args.location === undefined) {
                throw new Error("Missing required property 'location'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.snapshotPolicyName === undefined) {
                throw new Error("Missing required property 'snapshotPolicyName'");
            }
            inputs["accountName"] = args ? args.accountName : undefined;
            inputs["dailySchedule"] = args ? args.dailySchedule : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["hourlySchedule"] = args ? args.hourlySchedule : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["monthlySchedule"] = args ? args.monthlySchedule : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["snapshotPolicyName"] = args ? args.snapshotPolicyName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["weeklySchedule"] = args ? args.weeklySchedule : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(SnapshotPolicy.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing SnapshotPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new SnapshotPolicy(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SnapshotPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SnapshotPolicy.__pulumiType;
    }
}
exports.SnapshotPolicy = SnapshotPolicy;
/** @internal */
SnapshotPolicy.__pulumiType = 'azurerm:netapp/v20200601:snapshotPolicy';
//# sourceMappingURL=snapshotPolicy.js.map