"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * IoT Security solution configuration and resource information.
 */
class IotSecuritySolution extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState;
            if (!args || args.displayName === undefined) {
                throw new Error("Missing required property 'displayName'");
            }
            if (!args || args.iotHubs === undefined) {
                throw new Error("Missing required property 'iotHubs'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.solutionName === undefined) {
                throw new Error("Missing required property 'solutionName'");
            }
            inputs["disabledDataSources"] = args ? args.disabledDataSources : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["export"] = args ? args.export : undefined;
            inputs["iotHubs"] = args ? args.iotHubs : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["recommendationsConfiguration"] = args ? args.recommendationsConfiguration : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["solutionName"] = args ? args.solutionName : undefined;
            inputs["status"] = args ? args.status : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["unmaskedIpLoggingStatus"] = args ? args.unmaskedIpLoggingStatus : undefined;
            inputs["userDefinedResources"] = args ? args.userDefinedResources : undefined;
            inputs["workspace"] = args ? args.workspace : undefined;
            inputs["autoDiscoveredResources"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(IotSecuritySolution.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing IotSecuritySolution resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new IotSecuritySolution(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of IotSecuritySolution.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotSecuritySolution.__pulumiType;
    }
}
exports.IotSecuritySolution = IotSecuritySolution;
/** @internal */
IotSecuritySolution.__pulumiType = 'azurerm:security/v20190801:IotSecuritySolution';
//# sourceMappingURL=iotSecuritySolution.js.map