"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Certificate purchase order
 */
class CertificateOrder extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState;
            if (!args || args.location === undefined) {
                throw new Error("Missing required property 'location'");
            }
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["autoRenew"] = args ? args.autoRenew : undefined;
            inputs["certificates"] = args ? args.certificates : undefined;
            inputs["csr"] = args ? args.csr : undefined;
            inputs["distinguishedName"] = args ? args.distinguishedName : undefined;
            inputs["domainVerificationToken"] = args ? args.domainVerificationToken : undefined;
            inputs["expirationTime"] = args ? args.expirationTime : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["intermediate"] = args ? args.intermediate : undefined;
            inputs["keySize"] = args ? args.keySize : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["lastCertificateIssuanceTime"] = args ? args.lastCertificateIssuanceTime : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["productType"] = args ? args.productType : undefined;
            inputs["provisioningState"] = args ? args.provisioningState : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["root"] = args ? args.root : undefined;
            inputs["serialNumber"] = args ? args.serialNumber : undefined;
            inputs["signedCertificate"] = args ? args.signedCertificate : undefined;
            inputs["status"] = args ? args.status : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["validityInYears"] = args ? args.validityInYears : undefined;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(CertificateOrder.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing CertificateOrder resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new CertificateOrder(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of CertificateOrder.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CertificateOrder.__pulumiType;
    }
}
exports.CertificateOrder = CertificateOrder;
/** @internal */
CertificateOrder.__pulumiType = 'azurerm:certificateregistration/v20150801:CertificateOrder';
//# sourceMappingURL=certificateOrder.js.map