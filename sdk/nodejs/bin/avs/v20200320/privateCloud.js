"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * A private cloud resource
 */
class PrivateCloud extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState;
            if (!args || args.location === undefined) {
                throw new Error("Missing required property 'location'");
            }
            if (!args || args.managementCluster === undefined) {
                throw new Error("Missing required property 'managementCluster'");
            }
            if (!args || args.networkBlock === undefined) {
                throw new Error("Missing required property 'networkBlock'");
            }
            if (!args || args.privateCloudName === undefined) {
                throw new Error("Missing required property 'privateCloudName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.sku === undefined) {
                throw new Error("Missing required property 'sku'");
            }
            inputs["identitySources"] = args ? args.identitySources : undefined;
            inputs["internet"] = args ? args.internet : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["managementCluster"] = args ? args.managementCluster : undefined;
            inputs["networkBlock"] = args ? args.networkBlock : undefined;
            inputs["nsxtPassword"] = args ? args.nsxtPassword : undefined;
            inputs["privateCloudName"] = args ? args.privateCloudName : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["vcenterPassword"] = args ? args.vcenterPassword : undefined;
            inputs["circuit"] = undefined /*out*/;
            inputs["endpoints"] = undefined /*out*/;
            inputs["managementNetwork"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["nsxtCertificateThumbprint"] = undefined /*out*/;
            inputs["provisioningNetwork"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["vcenterCertificateThumbprint"] = undefined /*out*/;
            inputs["vmotionNetwork"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(PrivateCloud.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing PrivateCloud resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new PrivateCloud(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of PrivateCloud.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivateCloud.__pulumiType;
    }
}
exports.PrivateCloud = PrivateCloud;
/** @internal */
PrivateCloud.__pulumiType = 'azurerm:avs/v20200320:PrivateCloud';
//# sourceMappingURL=privateCloud.js.map