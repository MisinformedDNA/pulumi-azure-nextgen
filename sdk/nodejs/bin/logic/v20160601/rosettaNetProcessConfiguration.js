"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * The integration account RosettaNet process configuration.
 */
class RosettaNetProcessConfiguration extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState;
            if (!args || args.activitySettings === undefined) {
                throw new Error("Missing required property 'activitySettings'");
            }
            if (!args || args.initiatorRoleSettings === undefined) {
                throw new Error("Missing required property 'initiatorRoleSettings'");
            }
            if (!args || args.integrationAccountName === undefined) {
                throw new Error("Missing required property 'integrationAccountName'");
            }
            if (!args || args.processCode === undefined) {
                throw new Error("Missing required property 'processCode'");
            }
            if (!args || args.processName === undefined) {
                throw new Error("Missing required property 'processName'");
            }
            if (!args || args.processVersion === undefined) {
                throw new Error("Missing required property 'processVersion'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.responderRoleSettings === undefined) {
                throw new Error("Missing required property 'responderRoleSettings'");
            }
            if (!args || args.rosettaNetProcessConfigurationName === undefined) {
                throw new Error("Missing required property 'rosettaNetProcessConfigurationName'");
            }
            inputs["activitySettings"] = args ? args.activitySettings : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["initiatorRoleSettings"] = args ? args.initiatorRoleSettings : undefined;
            inputs["integrationAccountName"] = args ? args.integrationAccountName : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["metadata"] = args ? args.metadata : undefined;
            inputs["processCode"] = args ? args.processCode : undefined;
            inputs["processName"] = args ? args.processName : undefined;
            inputs["processVersion"] = args ? args.processVersion : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["responderRoleSettings"] = args ? args.responderRoleSettings : undefined;
            inputs["rosettaNetProcessConfigurationName"] = args ? args.rosettaNetProcessConfigurationName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["changedTime"] = undefined /*out*/;
            inputs["createdTime"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {};
        }
        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(RosettaNetProcessConfiguration.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing RosettaNetProcessConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new RosettaNetProcessConfiguration(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of RosettaNetProcessConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RosettaNetProcessConfiguration.__pulumiType;
    }
}
exports.RosettaNetProcessConfiguration = RosettaNetProcessConfiguration;
/** @internal */
RosettaNetProcessConfiguration.__pulumiType = 'azurerm:logic/v20160601:RosettaNetProcessConfiguration';
//# sourceMappingURL=rosettaNetProcessConfiguration.js.map